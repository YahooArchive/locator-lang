/*jslint node:true, nomen: true*/

'use strict';

var express = require('express'),
    Locator = require('locator'),
    LocatorLang = require('../'), // require('locator-lang'),
    app = express(),
    locatorObj = new Locator({ buildDirectory: 'build' });

// serving static compiled files
app.use(express.static('./build'));

// Route to access all lang entries for a particular file in a bundle
// * In this example there is only one locatorBundle, the app itself and
//   it is named `demo` from package.json->name definition
// * In this example, there is only one langBundle denotated by `foo`
//   and correspond to `lang/foo.json` file.
// * You can navigate to:
//   http://localhost:3000/demo/foo
//   which produce a json object with the entries collected by the plugin.
// * You can also access:
//   http://localhost:3000/demo-0.0.1/demo-lang-foo.js
//   which access to the static yui module generated by the plugin
// --------
app.get('/:locatorBundle/:langBundle', function (req, res, next) {
    res.send({
        locatorBundle: req.params.locatorBundle,
        langBundle: req.params.langBundle,
        entries: locatorObj.getBundle(req.params.locatorBundle).lang[req.params.langBundle]
    });
});

locatorObj.plug(new LocatorLang());
locatorObj.parseBundle(__dirname, {}).then(function () {

    // listening for traffic only after locator finishes the walking process
    app.listen(3000, function () {
        console.log("Server listening on port 3000");
    });

}, function (err) {
    throw err;
});